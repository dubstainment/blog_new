current directory: /home/shubh_spcl/blog/vendor/bundle/gems/nokogiri-1.8.4/ext/nokogiri
/usr/share/rvm/rubies/ruby-2.3.0/bin/ruby -r ./siteconf20181003-14331-145c7a3.rb extconf.rb
Ignoring bindex-0.5.0 because its extensions are not built.  Try: gem pristine bindex --version 0.5.0
Ignoring byebug-10.0.2 because its extensions are not built.  Try: gem pristine byebug --version 10.0.2
Ignoring ffi-1.9.25 because its extensions are not built.  Try: gem pristine ffi --version 1.9.25
Ignoring nio4r-2.3.1 because its extensions are not built.  Try: gem pristine nio4r --version 2.3.1
Ignoring posix-spawn-0.3.13 because its extensions are not built.  Try: gem pristine posix-spawn --version 0.3.13
Ignoring puma-3.12.0 because its extensions are not built.  Try: gem pristine puma --version 3.12.0
Ignoring redcarpet-3.2.3 because its extensions are not built.  Try: gem pristine redcarpet --version 3.2.3
Ignoring sqlite3-1.3.13 because its extensions are not built.  Try: gem pristine sqlite3 --version 1.3.13
Ignoring websocket-driver-0.6.5 because its extensions are not built.  Try: gem pristine websocket-driver --version 0.6.5
Ignoring yajl-ruby-1.2.3 because its extensions are not built.  Try: gem pristine yajl-ruby --version 1.2.3
checking if the C compiler accepts ... yes
Building nokogiri using packaged libraries.
Using mini_portile version 2.3.0
checking for gzdopen() in -lz... yes
checking for iconv... yes
************************************************************************
IMPORTANT NOTICE:

Building Nokogiri with a packaged version of libxml2-2.9.8
with the following patches applied:
	- 0001-Revert-Do-not-URI-escape-in-server-side-includes.patch

Team Nokogiri will keep on doing their best to provide security
updates in a timely manner, but if this is a concern for you and want
to use the system library instead; abort this installation process and
reinstall nokogiri as follows:

    gem install nokogiri -- --use-system-libraries
        [--with-xml2-config=/path/to/xml2-config]
        [--with-xslt-config=/path/to/xslt-config]

If you are using Bundler, tell it to use the option:

    bundle config build.nokogiri --use-system-libraries
    bundle install

Note, however, that nokogiri is not fully compatible with arbitrary
versions of libxml2 provided by OS/package vendors.
************************************************************************
Extracting libxml2-2.9.8.tar.gz into tmp/x86_64-pc-linux-gnu/ports/libxml2/2.9.8... OK
Running git apply with /home/shubh_spcl/blog/vendor/bundle/gems/nokogiri-1.8.4/patches/libxml2/0001-Revert-Do-not-URI-escape-in-server-side-includes.patch... OK
Running 'configure' for libxml2 2.9.8... OK
Running 'compile' for libxml2 2.9.8... OK
Running 'install' for libxml2 2.9.8... OK
Activating libxml2 2.9.8 (from /home/shubh_spcl/blog/vendor/bundle/gems/nokogiri-1.8.4/ports/x86_64-pc-linux-gnu/libxml2/2.9.8)...
************************************************************************
IMPORTANT NOTICE:

Building Nokogiri with a packaged version of libxslt-1.1.32.

Team Nokogiri will keep on doing their best to provide security
updates in a timely manner, but if this is a concern for you and want
to use the system library instead; abort this installation process and
reinstall nokogiri as follows:

    gem install nokogiri -- --use-system-libraries
        [--with-xml2-config=/path/to/xml2-config]
        [--with-xslt-config=/path/to/xslt-config]

If you are using Bundler, tell it to use the option:

    bundle config build.nokogiri --use-system-libraries
    bundle install
************************************************************************
Extracting libxslt-1.1.32.tar.gz into tmp/x86_64-pc-linux-gnu/ports/libxslt/1.1.32... OK
Running 'configure' for libxslt 1.1.32... OK
Running 'compile' for libxslt 1.1.32... OK
Running 'install' for libxslt 1.1.32... OK
Activating libxslt 1.1.32 (from /home/shubh_spcl/blog/vendor/bundle/gems/nokogiri-1.8.4/ports/x86_64-pc-linux-gnu/libxslt/1.1.32)...
checking for main() in -llzma... yes
checking for xmlParseDoc() in libxml/parser.h... yes
checking for xsltParseStylesheetDoc() in libxslt/xslt.h... yes
checking for exsltFuncRegister() in libexslt/exslt.h... yes
checking for xmlHasFeature()... yes
checking for xmlFirstElementChild()... yes
checking for xmlRelaxNGSetParserStructuredErrors()... yes
checking for xmlRelaxNGSetParserStructuredErrors()... yes
checking for xmlRelaxNGSetValidStructuredErrors()... yes
checking for xmlSchemaSetValidStructuredErrors()... yes
checking for xmlSchemaSetParserStructuredErrors()... yes
creating Makefile

To see why this extension failed to compile, please check the mkmf.log which can be found here:

  /home/shubh_spcl/blog/vendor/bundle/extensions/x86_64-linux/2.3.0/nokogiri-1.8.4/mkmf.log

current directory: /home/shubh_spcl/blog/vendor/bundle/gems/nokogiri-1.8.4/ext/nokogiri
make "DESTDIR=" clean

current directory: /home/shubh_spcl/blog/vendor/bundle/gems/nokogiri-1.8.4/ext/nokogiri
make "DESTDIR="
compiling xml_sax_parser_context.c
compiling xml_schema.c
compiling html_element_description.c
compiling xml_entity_decl.c
compiling xml_reader.c
compiling xml_namespace.c
compiling html_entity_lookup.c
compiling xml_document.c
compiling xml_cdata.c
compiling html_sax_parser_context.c
compiling xml_element_content.c
compiling xml_sax_push_parser.c
compiling xml_processing_instruction.c
compiling xml_encoding_handler.c
compiling nokogiri.c
compiling html_sax_push_parser.c
compiling xml_document_fragment.c
compiling html_document.c
compiling xml_libxml2_hacks.c
compiling xml_attr.c
compiling xml_entity_reference.c
compiling xslt_stylesheet.c
compiling xml_node.c
compiling xml_xpath_context.c
compiling xml_attribute_decl.c
compiling xml_comment.c
compiling xml_dtd.c
compiling xml_syntax_error.c
compiling xml_relax_ng.c
compiling xml_text.c
compiling xml_node_set.c
compiling xml_sax_parser.c
compiling xml_io.c
compiling xml_element_decl.c
linking shared-object nokogiri/nokogiri.so
Ignoring bindex-0.5.0 because its extensions are not built.  Try: gem pristine bindex --version 0.5.0
Ignoring byebug-10.0.2 because its extensions are not built.  Try: gem pristine byebug --version 10.0.2
Ignoring ffi-1.9.25 because its extensions are not built.  Try: gem pristine ffi --version 1.9.25
Ignoring nio4r-2.3.1 because its extensions are not built.  Try: gem pristine nio4r --version 2.3.1
Ignoring posix-spawn-0.3.13 because its extensions are not built.  Try: gem pristine posix-spawn --version 0.3.13
Ignoring puma-3.12.0 because its extensions are not built.  Try: gem pristine puma --version 3.12.0
Ignoring redcarpet-3.2.3 because its extensions are not built.  Try: gem pristine redcarpet --version 3.2.3
Ignoring sqlite3-1.3.13 because its extensions are not built.  Try: gem pristine sqlite3 --version 1.3.13
Ignoring websocket-driver-0.6.5 because its extensions are not built.  Try: gem pristine websocket-driver --version 0.6.5
Ignoring yajl-ruby-1.2.3 because its extensions are not built.  Try: gem pristine yajl-ruby --version 1.2.3
Cleaning files only used during build.
rm -rf /home/shubh_spcl/blog/vendor/bundle/gems/nokogiri-1.8.4/ext/nokogiri/tmp/x86_64-pc-linux-gnu/ports
rm -rf /home/shubh_spcl/blog/vendor/bundle/gems/nokogiri-1.8.4/ports

current directory: /home/shubh_spcl/blog/vendor/bundle/gems/nokogiri-1.8.4/ext/nokogiri
make "DESTDIR=" install
/usr/bin/install -m 0755 nokogiri.so ./.gem.20181003-14331-11dt9a1/nokogiri
